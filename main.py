import asyncio
import aiogram
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import Message, ContentType
from aiogram.enums import DiceEmoji
from aiogram.filters import Command

from dotenv import load_dotenv
import os 

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

waiting_for_user_dice = {}

@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ /roll —á—Ç–æ–±—ã –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤")

@dp.message(Command("roll"))
async def cmd_roll(message: Message):
    await message.reply(f"–ö–∏–¥–∞—é –∫—É–±–∏–∫ –∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∫–∏–¥–∞–µ—à—å —Ç—ã, –ø–æ—Å–º–æ—Ç—Ä–∏–º –∫—Ç–æ –≤—ã–π–≥—Ä–∞–µ—Ç!")
    dice = await message.answer_dice(emoji="üé≤")
    waiting_for_user_dice[message.from_user.id] = dice.dice.value

@dp.message(F.content_type == ContentType.DICE)
async def handle_user_dice(message: Message):
    user_id = message.from_user.id
    if user_id in waiting_for_user_dice:
        if message.dice.emoji == DiceEmoji.DICE:
            await asyncio.sleep(3)
            user_value = message.dice.value
            bot_value = waiting_for_user_dice.get(user_id)
            if user_value == bot_value:
                await message.answer(f"–ù–∏—á—å—è! üé≤")
            elif user_value > bot_value:
                await message.answer(f"–¢–´ –≤—ã–π–≥—Ä–∞–ª —É —Ç–µ–±—è –≤—ã–ø–∞–ª–æ {user_value}, –±–æ–ª—å—à–µ —á–µ–º —É –±–æ—Ç–∞ (–£ –±–æ—Ç–∞ –≤—ã–ø–∞–ª–æ {bot_value})! üé≤")
            elif bot_value < user_value:
                await message.answer(f"–¢–´ –ø—Ä–æ–∏–≥—Ä–∞–ª —É —Ç–µ–±—è –≤—ã–ø–∞–ª–æ {user_value}, –º–µ–Ω—å—à–µ —á–µ–º —É –±–æ—Ç–∞ (–£ –±–æ—Ç–∞ –≤—ã–ø–∞–ª–æ {bot_value})! üé≤")
            waiting_for_user_dice.pop(user_id)
        else:
            await message.reply(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —ç–º–æ–¥–∑–∏, –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É–±–∏–∫! üé≤")
    else:
        await message.reply(f"–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –Ω–∞–ø–∏—à–∏—Ç–µ /roll")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
